class Solution {
public:
     bool canEatAll(vector<int>& piles, int mid, int h) {
         int actualHours = 0;
         for(int &i : piles){
              actualHours += i/mid;

              if(i%mid != 0 ){
                  actualHours++;
              }
         }
         return actualHours <= h;
     }


    int minEatingSpeed(vector<int>& piles, int h) {
        int n = piles.size();
        int left = 1;
        int right = *max_element(begin(piles), end(piles));

        while(left < right) {
            int mid = left + (right-left)/2;

            if(canEatAll(piles, mid, h)) {
                right= mid;
            }else{
                left=mid+1;
            }
        }
        return left;
    }
};
